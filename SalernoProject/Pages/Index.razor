@page "/"
@using SalernoProject.Data
@using System.IO;
@inject IConfiguration Config
@inject IJSRuntime js;

<PageTitle>Anime Openings Tester</PageTitle>

<h1>Welcome to Anime Openings Quiz!</h1>

<button @onclick="NewOpening">New Opening</button>
<button @onclick="() => PlayAudio(10000)">10 Seconds</button>
<button @onclick="() => PlayAudio(20000)">20 Seconds</button>
<button @onclick="() => PlayAudio(30000)">30 Seconds</button>
<button @onclick="PlayVideo">Reveal Answer</button>

<br />
<h2>@animeName</h2>
<h2>@openingNumber</h2>
<h2>@openingName</h2>






<video id="video">
    <source id="videoSource" src="@videoFile" />
</video>


@code
{
    private string animeName = "", openingNumber = "", openingName = "";
    private string videoFile = "";
    private string defaultConnection = "";
    int videoIndex = 0;
    private Random rnd = new Random();
    private VideoFile? currentVideo;

    private List<VideoFile> videoFiles = new List<VideoFile>();
    protected async override Task OnInitializedAsync()
    {
        ReadFile();
        NewOpening();

    }

    private async Task PlayAudio(int seconds)
    {

        videoFile = currentVideo.filePath;
        await js.InvokeVoidAsync("hideVideoAndPlay", "video", "videoSource", videoFile, seconds);
    }

    private async Task PlayVideo()
    {
        animeName = currentVideo.animeName;
        openingNumber = currentVideo.openingNumber;
        openingName = currentVideo.openingName;

        videoFile = currentVideo.filePath;
        await js.InvokeVoidAsync("showVideoAndPlay", "video", "videoSource", videoFile, DotNetObjectReference.Create(this));
        //NewOpening();
    }

    [JSInvokable]
    public void NewOpening()
    {
        animeName = "";
        openingNumber = "";
        openingName = "";
        videoIndex = rnd.Next(videoFiles.Count);
        currentVideo = videoFiles[videoIndex];
        StateHasChanged();
    }
    private async void ReadFile()
    {
        string? line;
        //StreamReader sr = new StreamReader("wwwroot/VideoText.txt");
        StreamReader sr = new StreamReader("wwwroot/TextFile.txt");

        //Read the first line of text
        line = sr.ReadLine();
        //Continue to read until you reach end of file
        while (line != null)
        {
            string[] currentLine = line.Split('-');
            if (currentLine.Length == 4)
            {
                VideoFile currVideoInfo = new VideoFile(currentLine[0].Trim(), currentLine[1].Trim(), currentLine[2].Trim(), currentLine[3].Trim());
                videoFiles.Add(currVideoInfo);
            }
            //Read the next line
            line = sr.ReadLine();
        }
        //close the file
        sr.Close();
    }
}


